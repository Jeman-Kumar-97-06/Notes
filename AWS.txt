How Browser/Client and Server Comms work :--
	* A Browser / Client has an IP Address.
	* A Server that has required data/ app/ website has an IP Address too
	* The Network in between managed by ISP creates / manages communication between these two.

What is SERVER Composed of :--
	* CPU 
	* RAM
	* Storage
	* DB
	* Network Devices :-- Routers, Switch , DNS Server

Traditional Way of Hosting :--
	* People used to literally buy servers from store and put them in their homes and host a website.
	* As businesses grew people had to move to a big ass office, maintain a data center room to keep the servers and then used to scale them by adding more servers and drives.
	* Problems with this approach :--
		* Lot of rent to maintain data centers.
		* Increase in cost of power supply,cooling and maintainance.
		* Adding and replacing hardware takes time.
		* Scaling is limited. [Like how many disks are you going to put in there mate!]
		* Cost of hiring a team to maintain all this shit.
Modern Cloud Computing :--
	* Cloud computing is the on-demand delivery of compute power, database storage, apps, and other IT resources.
	* This has Pay-as-you-go pricing.
	* You can access all this instantly.
	* AWS owns and maintains the network-connected hardware required for these app services, while you provision and use what you need via a web app.
	* Easy to maintain and cost effective.
	* Ex :-- GMAIL is a cloud email service
		 Drop Box is a cloud storage service built on aws!
		 Netflix is a cloud video streaming service built on aws too!
	* Different types of cloud / deployment models of cloud:--
		* Private Cloud:
			* Cloud services used by a single organization, not exposed to the public.
			* So, only a single person/ members of a single organization can use it.
			* That person/organization has the complete control.
			* Enhanced security for sensitive apps / data of the organization
			* Ex: rack space company ...
		* Public Cloud :
			* A big set of computers and storage managed by companies like AWS,Azure,Google. Many people and businesses use it at the same time.
			You rent space or services when you need them, and cloud provider takes care of maintaining every thing.
			* It's flexible, easy to access, and you only pay for what you use. But it's not exclusively yours. 
			* Ex : AWS, Google Cloud, Microsoft Azure.
		* Hybrid Cloud :
			* A Hybrid Cloud is a mix of both private cloud (your own secure space) and public cloud (shared resources). 
			You can use your private setup for sensitive stuff and the public one when you need extra power or flexibility. 
			They work together, so you get the best of both worlds!
	* Five Characteristics of Cloud COmputing :--
		* On Demand Self Service :--
			* Users can provision resource and use them without human interaction from the service provider.
		* Broad Network Access :--
			* Resources available over the network and can be accessed by diverse client platforms.
		* Multi-tenancy :--
			* Multiple customers can share the same infrastructure and applications with security and privacy.
		* Rapid Elasticity and Scalability :--
			* Automatically and quickly acquire and dispose resources when needed.
			* Quickly and easily scale based on demand.
		* Measured Service:
			* Pay for what you need.
	* Advantages of Cloud Computing :--
		* Trade Capital Expense (CAPEX) for operational expense (OPEX).
			* Pay on Demand : Don't own hardware
			* Reduced Total Cost of Ownership
		* Benefit from massive economies of scale.
			* Prices will be reduced as AWS grow more effiecient and in scale.
		* Stop guessing capacity :
			* Scale based on actual use.
		* Increase speed and agility
		* You dont' have to maintain hardware and shit.
		
	* Types of Cloud Computing :--
		* Infrastructure as a Services (IaaS):--
			* Provides building blocks of cloud IT
			* Provides networking, computers, data storage space.
			* High Level of Flexibility.
			* Easy parallel with traditional on-premise IT.
			* Analogy :--
				* IaaS gives lego block, table and lego store to borrow from.
				* All you have to do is build toys.
			
		* Platform as a Service (PaaS):--
			* Removes the need for your organization to manage the underlying infrastructure.
			* Focus on the deployment and management of your applications.
			* Analogy :--
				* You are give flour , stove, gas , time , pre-measured amount of all ingredients
				* You don't even have to clean anything afterwards.
				* Just bake the cookies.
		* Software as a Service (SaaS):--
			* A Completed product that is run and managed by the service provider.
			
			
		* Comparing all the above based on what you have to manage:--
			On Premises: 		IaaS:		PaaS:		SaaS:
			Applications         Applications     Applications	-----
			Data		     Data	      Data
			RunTime		     Runtime
			Middleware	     Middleware
			OS		     OS
			Virtualization
			Servers
			Storage
			Networking
		
		* Services Provided by AWS:--
			* IaaS:--
				* Amazon EC2
				* Google Cloud Platform (GCP), Rackspace, Digital Ocean, Linode.
			* PaaS:-- 
				* AWS Elastic Beanstalk
				* Heroku, Google App Engine, Microsoft Azure.
			* SaaS:--
				* AWS Rekognition for ML
				* Gmail, Netflix, Google Meet, Sales Force.
		* AWS Pricing :-- 
			* Pay-As-You-Go:--
				* Compute :-- 
					* Pay as you go for compute time.
				* Storage :--
					* Pay as you go for storage space.
				* DataTransfer :-- 
					* When inside the cloud :--
						i.e., when your data stays within the AWS cloud (e.g., moving data
						between aws services like S3, EC2, or RDS in the same region).
						Many of these transfers have free or minimal costs.
					* Leaving the Cloud :--
						i.e., when the data is sent outside of aws such as, to the internet,
						users downloading files or APIs serving data to customers.
						This also includes transfering data to other cloud providers or on-premise
						 servers.

* AWS IAM Service :--
	* Identity and Access Management in AWS is a service that helps you manage access to AWS resources securely. It controls
	who (user, groups, roles) can access what (resources like S3 buckets, EC2 instances, etc.) and how (permissions and policies).
	* IAM is a critical part of AWS because it ensures that your AWS environment is secure and only authorized entities can perform
	specific actions.
	* This is a Global service [i.e., not region specific]
	* By creating a AWS account, youv'e created a root user.
	* Root user shouldn't be used or shared by any one. Instead one should create and use users and groups.
	* You can group more than one user and create a group.
	* Groups should contain individual users. Groups shouldn't inturn have groups inside them.
	* Not every user has to be a part of a group.
	* Also a user can belong to more than one group.
	* Users or Groups can be assigned JSON docs called policies.
	* These policies define the permissions of the users and groups.
	* Always follow 'least privilege principle'. This means, don't give more permissions than a user needs.
	* IAM Users and Groups :--
		* Go to IAM Dashboard by searching for 'IAM' in AWS search bar.
		* By default, when you log in to AWS you will be logged in as Root User.
		* Now go to IAM --> User : --
			* To create a user :-- Click 'create user'
			* Provide a user name in 'User Details'
			* If you want, check the 'Provide user access to the AWS management console' box.
			* After this the "Console Password" section has 2 options 'Autogenerated password' and 'Custom Password'.
			* Use any of those and create a password for the user.
			* After this a final check box allows you to choose weather the user you've created should change his password on his next sign in.
			* Now the next sections tells to choose between :
				* "Add user to group" :-- This makes you add the user to an existing group or by creating a new group.
				* 'Copy Permissions' :-- Copy all group memberships, attached managed policies , and other policies of an existing user.
				* "Attach Policies Directly" :-- Its like giving a user their own custom policies without adding them into a group.
			* Here we are going to choose 'Add user to group' and create a new group 'admin'.
			* Then we are going to attach a policy of name 'Administrator access'
			* Now select this 'admin' group to add the new user into it.
			* Now finally AWS sends you to 'Retrieve Password' section.
			* There if you select 'Email sign-in instructions', an email with sign in instructions will be sent to the created user.
			* That email includes : the 'sign in URL', 'user-name'. There won't be any 'passwords' included in the mail.
			* There wil also be a 'Download .csv file' option.
			* This file includes 'User Name'[of the IAM user], 'Access Key ID'[a unique identifier for the user's access keys] and 'Secret Access Keys'[the 
			secret part of the access keys user to securely sign API requests]
			
