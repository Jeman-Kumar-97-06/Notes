Virtualization vs Containerization:--
    * Traditional way to run a bussiness with servers:--
        * Apps run on servers.
        * A company's email service / DB service / Website used to run on one server each.
        * The OS on those servers didn't have the capability to run multiple apps securely on a single server.
        * Running one application per server was a waste of money.
        * To solve this virtual machines were invented.
    * Virtual Machines :--
        * When it comes to VMs, if you want to run a email, web service, and app on a single server, you install 3
        VMs inside a server.
        * These 3 VMs share the hardware resources of the server
        * VM :-- 
                    server/hardware ---> Hypervisor ---> Virtual machines--> OS--> Apps
                * At bottom server/hardware.
                * Hypervisor is what allows one machine to run multiple virtual machines.
                * Hypervisor allocates and controls the sharing the machines' hardware.
                        Ex :-- VMware ESXi
                           Citrix XenServer
                           Microsoft Hyperv
                * VM uses the shares hardware resources to run the os and app upon it.
                * Each VM has their own OS.
                * Dis-Advantages :-- 
                    * Consume a lot of disk space.
                    * Consumes a lot of RAM and CPU power from server.
                    * Slow to startup.
                    * Requires a license for each OS.

    * Containers:--
                  server/hardware --> OS --> Container Engine --> Apps
         * A container is an app that's been packaged with all the:
                --> Files , Configurations, Dependencies necessary to run it.

         * Disadvantages :--
                --> If the server crashes all the containers will be crashed
                --> A container designed for an OS can't run on other OS
        
    # Containers and VMS can work together.
        --> Ex :-- 2 or more VMS with One or More than One Containers can run.

Docker :--
    * Docker is a software platform that allows you to build, test, and deploy apps quickly using containers.
    * Docker Image :--
    	* A Docker image is a file that contains the instructions and files needed to create a Docker container.
    	* A Docker image acts as a template/blueprint with instructions for building Docker container.
    	* A Docker image stores :-- 
    		* Run time env [ex:-- specific node version]
    		* Application code
    		* Dependencies 
    		* Extra Config [ex :-- .env files ]
    		* Commands.
    		* A file system of it's own
        * Docker images are read-only.
        * Docker container is a runnable instance of Docker image.
        * Containers are Isolated Processes.
        * Meaning, they run independently of any other process running on the computer.
        * 
         
                    
                
