What is Redis :--
    -> Redis is a in-memory data store
    -> It's a key-value structure.
    -> Traditionally used as a caching layer.
    -> Data is stored in ram [so, very fast]
    -> Usually if an api has to connect to a database to get data,
       it would take time. But using Redis as a caching layer can save time.
    -> It stores queried data temporarily to save time when queries are repetitive
       or similar to each other.
    -> The disadvantage of Redis as a caching layer is, when the server restarts or crashes,
       the data will be deleted.
    -> But due to improvements, Redis can now be used as a primary database.
    -> This is due to features like Data Persistance, JSON Support, Search, Redis OM [Object Mapper] 
    -> The Above features attached as modules to Redis Core, together form Redis Stack.
    -> Data Types in Redis :--
            * Key - Value pairs with key as identifier. Ex : name --> 'jeman'
                                                             age  --> 27
            * The Values can be 'string' [ex: 'Jeman']
                                'sets'   [ex: {'jeman','jeevan','kumar'}] --> unordered, unique elements
                                'hashes' -> Data structures that allow you to store multiple field-value
                                           pairs under a single key. Each field-value pair within a hash
                                           is referred to as a "field" and "value". They look like objects
                                'lists'  -> collection of elements which don't need to be unique.
                                'sorted sets' -> a collection of unique strings [members] ordered by an 
                                                associated score.
